name: Тесты и раскатка на Pull Request

on: pull_request

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test:
        name: Проверяем стили
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@master

            - uses: pnpm/action-setup@v2
              with:
                  version: 7.26.3

            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'pnpm'

            - name: Install
              run: pnpm install

            - name: Check
              run: pnpm lint && pnpm stylelint

    test-format:
        name: Выполняем тесты
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@master

            - uses: pnpm/action-setup@v2
              with:
                  version: 7.26.3

            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'pnpm'

            - name: Install
              run: pnpm install

            - name: Check
              run: pnpm test

    build-and-push-image:
        name: Собираем dev Docker
        runs-on: ubuntu-latest
        needs:
            - test
            - test-format
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@master

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  file: ./deployment/Dockerfile
                  context: .
                  push: true
                  build-args: |
                      BUILD_MODE=testing
                      LAUNCH_MODE=development-${{ github.event.pull_request.number }}
                      APP_VERSION=${{ github.ref_name }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    deploy-dev:
        name: Раскатываем dev среду
        runs-on: ubuntu-latest
        needs: build-and-push-image
        environment:
            name: development-pr-${{ github.event.pull_request.number }}
            url: https://${{ github.event.repository.name }}__pr-${{ github.event.pull_request.number }}.dev.profcomff.com/
        steps:
            - name: Deploy
              run: |
                  curl -X 'POST' \
                    'https://ci.dev.profcomff.com/pr_run' \
                    -H 'accept: application/json' \
                    -H 'Content-Type: application/json' \
                    -H 'Authorization: ${{ secrets.CI_DYAKOVSPACE_MSK_TOKEN }}' \
                    -d '{
                      "repo_url": "${{ github.repository }}",
                      "git_ref": "${{ github.ref }}"
                    }'
